Postgersql:
-----------
ram@ram:~/30.service-sonarqube/postgresql$ helm install sonarqube -n sonarqube . -f values.yaml
NAME: sonarqube
LAST DEPLOYED: Sun Aug 10 02:07:48 2025
NAMESPACE: sonarqube
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
CHART NAME: postgresql
CHART VERSION: 15.5.19
APP VERSION: 16.3.0

** Please be patient while the chart is being deployed **

WARNING: PostgreSQL has been configured without authentication, this is not recommended for production environments.

PostgreSQL can be accessed via port 5432 on the following DNS names from within your cluster:

    sonarqube-postgresql-primary.sonarqube.svc.cluster.local - Read/Write connection

    sonarqube-postgresql-read.sonarqube.svc.cluster.local - Read only connection

To get the password for "sonarqube" run:

    export POSTGRES_PASSWORD=$(kubectl get secret --namespace sonarqube postgresql-secret -o jsonpath="{.data.password}" | base64 -d)

To connect to your database run the following command:

    kubectl run sonarqube-postgresql-client --rm --tty -i --restart='Never' --namespace sonarqube --image docker.io/bitnami/postgresql:16.3.0-debian-12-r22 \
      --command -- psql --host sonarqube-postgresql-primary -d sonarqube -p 5432

    > NOTE: If you access the container using bash, make sure that you execute "/opt/bitnami/scripts/postgresql/entrypoint.sh /bin/bash" in order to avoid the error "psql: local user with ID 1001} does not exist"

To connect to your database from outside the cluster execute the following commands:

    kubectl port-forward --namespace sonarqube svc/sonarqube-postgresql-primary 5432:5432 &
    psql --host 127.0.0.1 -d sonarqube -p 5432

WARNING: The configured password will be ignored on new installation in case when previous PostgreSQL release was deleted through the helm command. In that case, old PVC will have an old password, and setting it through helm won't take effect. Deleting persistent volumes (PVs) will solve the issue.

ram@ram:~/30.service-sonarqube/postgresql$ kubectl get pvc -n sonarqube
NAME                                  STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE
data-sonarqube-postgresql-primary-0   Bound    pvc-37a2ebb7-d9e0-43a7-a2d4-8bb6f2babb65   5Gi        RWO            standard       <unset>                 7m48s
data-sonarqube-postgresql-read-0      Bound    pvc-e74922a2-3ab0-457b-a04a-420659622e5f   5Gi        RWO            standard       <unset>                 7m48s
ram@ram:~/30.service-sonarqube/postgresql$ kubectl get po -n sonarqube
NAME                             READY   STATUS    RESTARTS   AGE
sonarqube-postgresql-primary-0   1/1     Running   0          10m
sonarqube-postgresql-read-0      1/1     Running   0          10m
ram@ram:~/30.service-sonarqube/postgresql$ kubectl get statefulset -n sonarqube
NAME                           READY   AGE
sonarqube-postgresql-primary   1/1     10m
sonarqube-postgresql-read      1/1     10m
ram@ram:~/30.service-sonarqube/postgresql$ 
ram@ram:~/30.service-sonarqube$ kubectl get svc -n sonarqube
NAME                              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
sonarqube-postgresql-primary      ClusterIP   10.101.11.200   <none>        5432/TCP   21m
sonarqube-postgresql-primary-hl   ClusterIP   None            <none>        5432/TCP   21m
sonarqube-postgresql-read         ClusterIP   10.96.14.19     <none>        5432/TCP   21m
sonarqube-postgresql-read-hl      ClusterIP   None            <none>        5432/TCP   21m

ram@ram:~/30.service-sonarqube/sonarqube/sonarqube$ helm install sonarqube-app -n sonarqube . -f values.yaml
NAME: sonarqube-app
LAST DEPLOYED: Sun Aug 10 02:38:28 2025
NAMESPACE: sonarqube
STATUS: deployed
REVISION: 1
NOTES:
1. Get the application URL by running these commands:
  export POD_NAME=$(kubectl get pods --namespace sonarqube -l "app=sonarqube,release=sonarqube-app" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:9000 -n sonarqube
WARNING: 
         Please note that the SonarQube image runs with a non-root user (uid=1000) belonging to the root group (guid=0). In this way, the chart can support arbitrary user ids as recommended in OpenShift.
         Please visit https://docs.openshift.com/container-platform/4.14/openshift_images/create-images.html#use-uid_create-images for more information.